package com.shirtstore.entity;
// Generated Apr 20, 2024, 2:20:15â€¯PM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Locale;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

/**
 * Customer generated by hbm2java
 */
@Entity
@Table(name = "customer", catalog = "shirtstoredb", uniqueConstraints = @UniqueConstraint(columnNames = "email"))
@NamedQueries({
	@NamedQuery(name = "Customer.findAll", query = "SELECT c FROM Customer c ORDER By c.signUpDate DESC"),
	@NamedQuery(name = "Customer.countAll", query = "SELECT COUNT(*) FROM Customer"),
	@NamedQuery(name = "Customer.findByEmail", query = "SELECT c FROM Customer c WHERE c.email = :email"),
	@NamedQuery(name = "Customer.checkLogin", query = "SELECT c FROM Customer c WHERE c.email = :email AND c.password = :password"),
		@NamedQuery(name = "Customer.checkCompletedOrder", query = "SELECT COUNT(*) FROM Customer c, ShirtOrder so, OrderDetail od, Shirt s" +
				" WHERE c.customerId = :customerId AND c.customerId = so.customer.customerId AND so.status='Completed' AND s.shirtId = :shirtId" +
				" AND s.shirtId = od.shirt.shirtId AND od.shirtOrder.orderId = so.orderId"),
})

public class Customer implements java.io.Serializable {

	private int customerId;
	private String email;
	private String firstname;
	private String lastname;
	private String addressLine1;
	private String addressLine2;
	private String city;
	private String state;
	private String country;
	private String phoneNumber;
	private String zipcode;
	private String password;
	private Date signUpDate;
	private Set<Rate> rates = new HashSet<Rate>(0);
	private Set<ShirtOrder> shirtOrders = new HashSet<ShirtOrder>(0);

	public Customer() {
	}

	public Customer(int customerId, String email, String firstname, String lastname, String addressLine1, String addressLine2, String city, String state, String country,
					String phoneNumber, String zipcode, String password, Date signUpDate) {
		this.customerId = customerId;
		this.email = email;
		this.firstname = firstname;
		this.lastname = lastname;
		this.addressLine1 = addressLine1;
		this.addressLine2 = addressLine2;
		this.city = city;
		this.state = state;
		this.country = country;
		this.phoneNumber = phoneNumber;
		this.zipcode = zipcode;
		this.password = password;
		this.signUpDate = signUpDate;
	}

	public Customer(int customerId, String email, String firstname, String lastname, String addressLine1, String addressLine2, String city, String state, String country,
					String phoneNumber, String zipcode, String password, Date signUpDate, Set<Rate> rates,
					Set<ShirtOrder> shirtOrders) {
		this(customerId, email, firstname, lastname, addressLine1, addressLine2, city, state, country, phoneNumber, zipcode, password, signUpDate);
		this.rates = rates;
		this.shirtOrders = shirtOrders;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "customer_id", unique = true, nullable = false)
	public int getCustomerId() {
		return this.customerId;
	}

	public void setCustomerId(int customerId) {
		this.customerId = customerId;
	}

	@Column(name = "email", unique = true, nullable = true, length = 50)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "firstname", nullable = true, length = 50)
	public String getFirstname() {
		return this.firstname;
	}

	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}
	
	@Column(name = "lastname", nullable = true, length = 50)
	public String getLastname() {
		return this.lastname;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}
	
	@Transient
	public String getFullName() {
		return this.firstname + " " + this.lastname;
	}
	
	@Column(name = "address_line_1", nullable = true, length = 200)
	public String getAddressLine1() {
		return this.addressLine1;
	}

	public void setAddressLine1(String addressLine1) {
		this.addressLine1 = addressLine1;
	}
	
	@Column(name = "address_line_2", nullable = true, length = 200)
	public String getAddressLine2() {
		return this.addressLine2;
	}

	public void setAddressLine2(String addressLine2) {
		this.addressLine2 = addressLine2;
	}

	@Column(name = "city", nullable = true, length = 50)
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "state", nullable = true, length = 50)
	public String getState() {
		return this.city;
	}

	public void setState(String state) {
		this.state = state;
	}
	
	@Column(name = "country", nullable = true, length = 4)
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@Transient
	public String getCountryName() {
		if (this.country == null || this.country.isEmpty()) {
			return ""; // Default value if country is null
		}
		return new Locale("", this.country).getDisplayCountry();
	}
	
	@Column(name = "phone_number", nullable = true, length = 10)
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "zipcode", nullable = true, length = 9)
	public String getZipcode() {
		return this.zipcode;
	}

	public void setZipcode(String zipcode) {
		this.zipcode = zipcode;
	}

	@Column(name = "password_hash", nullable = true, length = 50)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "sign_up_date", nullable = true, length = 19)
	public Date getSignUpDate() {
		return this.signUpDate;
	}

	public void setSignUpDate(Date signUpDate) {
		this.signUpDate = signUpDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Rate> getRates() {
		return this.rates;
	}

	public void setRates(Set<Rate> rates) {
		this.rates = rates;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<ShirtOrder> getShirtOrders() {
		return this.shirtOrders;
	}

	public void setShirtOrders(Set<ShirtOrder> shirtOrders) {
		this.shirtOrders = shirtOrders;
	}

}
