package com.shirtstore.entity;
// Generated Apr 20, 2024, 2:20:15â€¯PM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Locale;
import java.util.Objects;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * ShirtOrder generated by hbm2java
 */
@Entity
@Table(name = "order", catalog = "shirtstoredb")
@NamedQueries({
	@NamedQuery(name = "ShirtOrder.listAll", query = "SELECT so FROM ShirtOrder so ORDER BY so.orderDate DESC"),
	@NamedQuery(name = "ShirtOrder.countAll", query = "SELECT COUNT(*) FROM ShirtOrder"),
	@NamedQuery(name = "ShirtOrder.findByCustomer", query = "SELECT so FROM ShirtOrder so WHERE so.customer.customerId = :customerId ORDER BY so.orderDate DESC"),
	@NamedQuery(name = "ShirtOrder.findByIdAndCustomer", query = "SELECT so FROM ShirtOrder so WHERE so.orderId = :orderId AND so.customer.customerId = :customerId"),
	@NamedQuery(name = "ShirtOrder.countByCustomer", query = "SELECT COUNT(*) FROM ShirtOrder so WHERE so.customer.customerId = :customerId"),
})
public class ShirtOrder implements java.io.Serializable {

	private int orderId;
	private Customer customer;
	private Date orderDate;
	private String addressLine1;
	private String addressLine2;
	private String firstname;
	private String lastname;
	private String phone;
	private String country;
	private String city;
	private String state;
	private String zipcode;
	private String payment;

	//Modified to @Transient//
	private float orderSum;
	//-------------------//

	private float subtotal;
	private float shippingFee;
	private float tax;
	
	private String status;
	private Set<OrderDetail> orderDetails = new HashSet<OrderDetail>(0);
	private Set<OrderPromotion> orderPromotions = new HashSet<OrderPromotion>(0);

	public ShirtOrder() {
	}

	public ShirtOrder(int orderId, Customer customer, Date orderDate, String toAddress, String recipientName,
					  String recipientPhone, String payment, float orderSum, String status) {
		this.orderId = orderId;
		this.customer = customer;
		this.orderDate = orderDate;
		this.addressLine1 = toAddress;
		this.firstname = recipientName;
		this.phone = recipientPhone;
		this.payment = payment;
		this.orderSum = orderSum;
		this.status = status;
	}

	public ShirtOrder(int orderId, Customer customer, Date orderDate, String toAddress, String recipientName,
					  String recipientPhone, String payment, float orderSum, String status, Set<OrderDetail> orderDetails, Set<OrderPromotion> orderPromotions) {
		this.orderId = orderId;
		this.customer = customer;
		this.orderDate = orderDate;
		this.addressLine1 = toAddress;
		this.firstname = recipientName;
		this.phone = recipientPhone;
		this.payment = payment;
		this.orderSum = orderSum;
		this.status = status;
		this.orderDetails = orderDetails;
		this.orderPromotions = orderPromotions;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "order_id", unique = true, nullable = false)
	public int getOrderId() {
		return this.orderId;
	}

	public void setOrderId(int orderId) {
		this.orderId = orderId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "customer_id", nullable = false)
	public Customer getCustomer() {
		return this.customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "order_date", nullable = false, length = 19)
	public Date getOrderDate() {
		return this.orderDate;
	}

	public void setOrderDate(Date orderDate) {
		this.orderDate = orderDate;
	}

	@Column(name = "r_address_line_1", nullable = false, length = 200)
	public String getAddressLine1() {
		return this.addressLine1;
	}

	public void setAddressLine1(String toAddress) {
		this.addressLine1 = toAddress;
	}

	@Column(name = "r_address_line_2", nullable = false, length = 200)
	public String getAddressLine2() {
		return addressLine2;
	}

	public void setAddressLine2(String addressLine2) {
		this.addressLine2 = addressLine2;
	}


	@Column(name = "r_firstname", nullable = false, length = 50)
	public String getFirstname() {
		return this.firstname;
	}

	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	@Column(name = "r_phone_number", nullable = false, length = 10)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "payment", nullable = false, length = 30)
	public String getPayment() {
		return this.payment;
	}

	public void setPayment(String payment) {
		this.payment = payment;
	}

//	@Column(name = "order_sum", nullable = false, precision = 12, scale = 0)
	@Transient
	public float getOrderSum() {
		return this.orderSum;
	}

	public void setOrderSum(float orderSum) {
		this.orderSum = orderSum;
	}

	@Column(name = "status", nullable = false, length = 50)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "shirtOrder", cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<OrderDetail> getOrderDetails() {
		return this.orderDetails;
	}

	public void setOrderDetails(Set<OrderDetail> orderDetails) {
		this.orderDetails = orderDetails;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "shirtOrder", cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<OrderPromotion> getOrderPromotions() { return this.orderPromotions; }

	public void setOrderPromotions(Set<OrderPromotion> orderPromotions) {
		this.orderPromotions = orderPromotions;
	}

	@Column(name = "r_lastname", nullable = false, length = 50)
	public String getLastname() {
		return lastname;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	@Column(name = "r_country", nullable = false, length = 4)
	public String getCountry() {
		return country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@Column(name = "r_city", nullable = false, length = 50)
	public String getCity() {
		return city;
	}

	public void setCity(String city) {
		this.city = city;
	}
	
	@Column(name = "r_state", nullable = false, length = 50)
	public String getState() {
		return state;
	}

	public void setState(String state) {
		this.state = state;
	}
	
	@Column(name = "r_zipcode", nullable = false, length = 9)
	public String getZipcode() {
		return zipcode;
	}

	public void setZipcode(String zipcode) {
		this.zipcode = zipcode;
	}
	
	@Transient
	public String getCountryName() {
		return new Locale("", this.country).getDisplayCountry();
	}
	
	@Column(name = "subtotal", nullable = false, precision = 12, scale = 0)
	public float getSubtotal() {
		return subtotal;
	}

	public void setSubtotal(float subtotal) {
		this.subtotal = subtotal;
	}
	
	@Column(name = "shipping_fee", nullable = false, precision = 12, scale = 0)
	public float getShippingFee() {
		return shippingFee;
	}

	public void setShippingFee(float shippingFee) {
		this.shippingFee = shippingFee;
	}
	
	@Column(name = "tax", nullable = false, precision = 12, scale = 0)
	public float getTax() {
		return tax;
	}

	public void setTax(float tax) {
		this.tax = tax;
	}

	@Transient
	public int getQuantityOfShirts() {
		int total = 0;
		
		for (OrderDetail orderDetail : orderDetails) {
			total += orderDetail.getQuantity();
		}
		
		return total;
	}
	
	@Override
	public int hashCode() {
		return Objects.hash(orderId);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ShirtOrder other = (ShirtOrder) obj;
		return orderId == other.orderId;
	}
}
