package com.shoestoredb.entity3;
// Generated Apr 20, 2024, 2:20:15â€¯PM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Shoe generated by hbm2java
 */
@Entity
@Table(name = "shoe", catalog = "shoestoredb", uniqueConstraints = @UniqueConstraint(columnNames = "shoe_name"))
public class Shoe implements java.io.Serializable {

	private int shoeId;
	private Type type;
	private String shoeName;
	private String brand;
	private String description;
	private byte[] shoeImage;
	private float shoePrice;
	private Date releasedDate;
	private Set<OrderDetail> orderDetails = new HashSet<OrderDetail>(0);
	private Set<Rate> rates = new HashSet<Rate>(0);

	public Shoe() {
	}

	public Shoe(int shoeId, Type type, String shoeName, String brand, String description, byte[] shoeImage,
			float shoePrice, Date releasedDate) {
		this.shoeId = shoeId;
		this.type = type;
		this.shoeName = shoeName;
		this.brand = brand;
		this.description = description;
		this.shoeImage = shoeImage;
		this.shoePrice = shoePrice;
		this.releasedDate = releasedDate;
	}

	public Shoe(int shoeId, Type type, String shoeName, String brand, String description, byte[] shoeImage,
			float shoePrice, Date releasedDate, Set<OrderDetail> orderDetails, Set<Rate> rates) {
		this.shoeId = shoeId;
		this.type = type;
		this.shoeName = shoeName;
		this.brand = brand;
		this.description = description;
		this.shoeImage = shoeImage;
		this.shoePrice = shoePrice;
		this.releasedDate = releasedDate;
		this.orderDetails = orderDetails;
		this.rates = rates;
	}

	@Id

	@Column(name = "shoe_id", unique = true, nullable = false)
	public int getShoeId() {
		return this.shoeId;
	}

	public void setShoeId(int shoeId) {
		this.shoeId = shoeId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "type_id", nullable = false)
	public Type getType() {
		return this.type;
	}

	public void setType(Type type) {
		this.type = type;
	}

	@Column(name = "shoe_name", unique = true, nullable = false, length = 50)
	public String getShoeName() {
		return this.shoeName;
	}

	public void setShoeName(String shoeName) {
		this.shoeName = shoeName;
	}

	@Column(name = "brand", nullable = false, length = 50)
	public String getBrand() {
		return this.brand;
	}

	public void setBrand(String brand) {
		this.brand = brand;
	}

	@Column(name = "description", nullable = false, length = 16777215)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "shoe_image", nullable = false)
	public byte[] getShoeImage() {
		return this.shoeImage;
	}

	public void setShoeImage(byte[] shoeImage) {
		this.shoeImage = shoeImage;
	}

	@Column(name = "shoe_price", nullable = false, precision = 12, scale = 0)
	public float getShoePrice() {
		return this.shoePrice;
	}

	public void setShoePrice(float shoePrice) {
		this.shoePrice = shoePrice;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "released_date", nullable = false, length = 10)
	public Date getReleasedDate() {
		return this.releasedDate;
	}

	public void setReleasedDate(Date releasedDate) {
		this.releasedDate = releasedDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "shoe")
	public Set<OrderDetail> getOrderDetails() {
		return this.orderDetails;
	}

	public void setOrderDetails(Set<OrderDetail> orderDetails) {
		this.orderDetails = orderDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "shoe")
	public Set<Rate> getRates() {
		return this.rates;
	}

	public void setRates(Set<Rate> rates) {
		this.rates = rates;
	}

}
