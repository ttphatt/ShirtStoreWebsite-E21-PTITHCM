package com.shoestoredb.entity3;
// Generated Apr 20, 2024, 2:20:15â€¯PM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Customer generated by hbm2java
 */
@Entity
@Table(name = "customer", catalog = "shoestoredb", uniqueConstraints = @UniqueConstraint(columnNames = "email"))
public class Customer implements java.io.Serializable {

	private int customerId;
	private String email;
	private String fullName;
	private String address;
	private String city;
	private String country;
	private String phoneNumber;
	private String zip;
	private String password;
	private Date signUpDate;
	private Set<Rate> rates = new HashSet<Rate>(0);
	private Set<ShoeOrder> shoeOrders = new HashSet<ShoeOrder>(0);

	public Customer() {
	}

	public Customer(int customerId, String email, String fullName, String address, String city, String country,
			String phoneNumber, String zip, String password, Date signUpDate) {
		this.customerId = customerId;
		this.email = email;
		this.fullName = fullName;
		this.address = address;
		this.city = city;
		this.country = country;
		this.phoneNumber = phoneNumber;
		this.zip = zip;
		this.password = password;
		this.signUpDate = signUpDate;
	}

	public Customer(int customerId, String email, String fullName, String address, String city, String country,
			String phoneNumber, String zip, String password, Date signUpDate, Set<Rate> rates,
			Set<ShoeOrder> shoeOrders) {
		this.customerId = customerId;
		this.email = email;
		this.fullName = fullName;
		this.address = address;
		this.city = city;
		this.country = country;
		this.phoneNumber = phoneNumber;
		this.zip = zip;
		this.password = password;
		this.signUpDate = signUpDate;
		this.rates = rates;
		this.shoeOrders = shoeOrders;
	}

	@Id

	@Column(name = "customer_id", unique = true, nullable = false)
	public int getCustomerId() {
		return this.customerId;
	}

	public void setCustomerId(int customerId) {
		this.customerId = customerId;
	}

	@Column(name = "email", unique = true, nullable = false, length = 50)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "full_name", nullable = false, length = 50)
	public String getFullName() {
		return this.fullName;
	}

	public void setFullName(String fullName) {
		this.fullName = fullName;
	}

	@Column(name = "address", nullable = false, length = 60)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "city", nullable = false, length = 30)
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "country", nullable = false, length = 30)
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@Column(name = "phone_number", nullable = false, length = 10)
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "zip", nullable = false, length = 20)
	public String getZip() {
		return this.zip;
	}

	public void setZip(String zip) {
		this.zip = zip;
	}

	@Column(name = "password", nullable = false, length = 50)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "sign_up_date", nullable = false, length = 19)
	public Date getSignUpDate() {
		return this.signUpDate;
	}

	public void setSignUpDate(Date signUpDate) {
		this.signUpDate = signUpDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Rate> getRates() {
		return this.rates;
	}

	public void setRates(Set<Rate> rates) {
		this.rates = rates;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<ShoeOrder> getShoeOrders() {
		return this.shoeOrders;
	}

	public void setShoeOrders(Set<ShoeOrder> shoeOrders) {
		this.shoeOrders = shoeOrders;
	}

}
